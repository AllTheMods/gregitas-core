plugins {
    id 'net.neoforged.moddev.legacyforge' version '2.0.88'
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group
}

mod_id = project.mod_id
mod_author = project.mod_author

def modId = project.mod_id
def generatedResources = file("src/generated")

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

legacyForge {
    version = "1.20.1-47.3.0"
    runs {
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
        configureEach {
            jvmArgument("-Dproduction=true")
        }
    }

    mods {
        $modId {
            sourceSet sourceSets.main
        }
    }
    parchment {
        minecraftVersion = project.minecraft_version
        mappingsVersion = project.parchment_mappings
    }
}

sourceSets {
    main {
        resources.srcDir generatedResources
    }
}

repositories {
    mavenCentral()
    maven {
        name 'FirstDarkDev'
        url "https://maven.firstdarkdev.xyz/snapshots/"
    }
    maven {
        name 'Quilt'
        url 'https://maven.quiltmc.org/repository/release/'
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        url "https://maven.latvian.dev/releases/"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven { // Registrate
        url = "https://maven.tterrag.com/"
        content {
            // need to be specific here due to version overlaps
            includeGroup("com.jozufozu.flywheel")
            includeGroup("com.tterrag.registrate")
            includeGroup("com.simibubi.create")
        }
    }
    maven {
        // Patchouli, JEI
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        // Curse Forge File
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.ftb.dev/releases"
        content {
            includeGroup "dev.ftb.mods"
        }
    }
    maven {
        url "https://maven.ithundxr.dev/releases"
        content {
            includeGroup "com.railwayteam.railways"
        }
    }
    maven {
        name = 'GTCEu Maven'
        url = 'https://maven.gtceu.com'
        content {
            includeGroup 'com.gregtechceu.gtceu'
        }
    }
    flatDir {
        dir 'libs'
    }
}

mixin {
    add(sourceSets.main ,"gregitas-core-refmap.json")
    config("gregitas_core.mixins.json")
}

dependencies {
    compileOnly("org.jetbrains:annotations:24.1.0")

    // Mixin Extras
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixinextras_version}"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:${project.mixinextras_version}"))
    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")

    modCompileOnly("mezz.jei:jei-${project.minecraft_version}-forge-api:${project.jei_version}") { transitive = false }
    modCompileOnly("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}") { transitive = false }
//
    modImplementation("com.gregtechceu.gtceu:gtceu-${project.minecraft_version}:${project.gtceu_version}") { transitive = false }
    modImplementation("com.lowdragmc.ldlib:ldlib-forge-${project.minecraft_version}:${project.ldlib_version}") { transitive = false }
    modImplementation("com.tterrag.registrate:Registrate:${project.registrate_version}")
    modImplementation("dev.latvian.mods:kubejs-forge:${project.kubejs_version}")
    modImplementation("curse.maven:tfcambiental-940350:${project.tfcambiental_file}")
    modImplementation("curse.maven:terrafirmacraft-302973:${project.terrafirmacraft_file}")
    modImplementation("curse.maven:beneath-1113980:${project.beneath_file}")
    modImplementation("dev.ftb.mods:ftb-chunks-forge:${project.ftb_chunks_version}") { transitive = false }
    modImplementation("dev.ftb.mods:ftb-library-forge:${project.ftb_library_version}") { transitive = false }
    modImplementation("dev.ftb.mods:ftb-teams-forge:${project.ftb_teams_version}") { transitive = false }
//
    modImplementation("com.jozufozu.flywheel:flywheel-forge-1.20.1:0.6.11-13")
    modImplementation("curse.maven:create-328085:6323270") { transitive = false }
    modImplementation("curse.maven:ice-and-fire-dragons-264231:5122408")
    modImplementation("curse.maven:citadel-331936:4848887")
    modImplementation("curse.maven:firmalife-453394:5775257")
    modImplementation("curse.maven:apotheosis-313970:5145344")
    modImplementation("curse.maven:attributeslib-898963:5634071")
    modImplementation("curse.maven:framework-549225:5811593")
    modImplementation("curse.maven:placebo-283644:5414631")
    modImplementation("curse.maven:scorched-guns-802940:5741395")
    modImplementation("curse.maven:create-diesel-generators-869316:5401010")
    modImplementation("curse.maven:immersive-machinery-1068736:6036154")
    modImplementation("curse.maven:immersive-aircraft-666014:6036814")
    modImplementation("curse.maven:medieval-siege-machines-585964:6276088")

    modRuntimeOnly("vazkii.patchouli:Patchouli:${project.minecraft_version}-${project.patchouli_version}-FORGE")
    modRuntimeOnly("top.theillusivec4.curios:curios-forge:${project.curios_version}+${project.minecraft_version}")
    modRuntimeOnly("dev.toma.configuration:configuration-forge-${project.minecraft_version}:${project.configuration_version}")
    modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-forge:${project.jei_version}") { transitive = false }
    modRuntimeOnly("curse.maven:jade-324717:5072729")

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}

tasks {
    processResources {
        // define properties that can be used during resource processing
        inputs.property "version", project.version

        filesMatching("META-INF/mods.toml") {
            expand "version": project.version
        }
    }
}


tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "MixinConfigs"            : "gregitas_core.mixins.json",
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
